// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider = "zod-prisma-types"
  output   = "./generated/zod-typings"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id @default(uuid())
  username String @unique
  password String

  Upvote   Upvote[]
  Downvote Downvote[]
  Streamer Streamer[]
}

model Streamer {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?
  uploaded_by String

  platformId String
  Platform   Platform @relation(fields: [platformId], references: [id])
  User       User     @relation(fields: [uploaded_by], references: [id])

  Upvote   Upvote[]
  Downvote Downvote[]
}

model Platform {
  id   String @id @default(uuid())
  type String @unique

  Streamer Streamer[]
}

model Upvote {
  id         String   @id @default(uuid())
  streamerId String
  Streamer   Streamer @relation(fields: [streamerId], references: [id])

  userId String
  User   User   @relation(fields: [userId], references: [id])

  @@unique(fields: [userId, streamerId], name: "userAndStreamerId")
}

model Downvote {
  id         String   @id @default(uuid())
  streamerId String
  Streamer   Streamer @relation(fields: [streamerId], references: [id])

  userId String
  User   User   @relation(fields: [userId], references: [id])

  @@unique(fields: [userId, streamerId], name: "userAndStreamerId")
}
